name: Flutter Build

on:
  workflow_dispatch:
  push:
    branches:
      - build
    tags:
      - '*'

jobs:
  Build:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache.outputs.cache-primary-key }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: nixbuild/nix-quick-install-action@v29

      - name: Setup Cache
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-
          gc-max-store-size-linux: 1073741824
          purge: true
          purge-prefixes: nix-${{ runner.os }}-
          purge-created: 0
          purge-primary-key: never

      - name: Install Dependencies
        run: nix develop --command flutter pub get

      - name: Build APK
        run: nix develop --command flutter build apk --release

      - name: Build APK (split ABI)
        run: nix develop --command flutter build apk --release --split-per-abi

      - name: Upload APKs as Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: apk-files
          path: |
            build/app/outputs/apk/release/singularity-${{ github.ref_name }}-release.apk
            build/app/outputs/apk/release/singularity-${{ github.ref_name }}-arm64-v8a-release.apk
            build/app/outputs/apk/release/singularity-${{ github.ref_name }}-armeabi-v7a-release.apk
            build/app/outputs/apk/release/singularity-${{ github.ref_name }}-x86_64-release.apk

  Release:
    runs-on: ubuntu-latest
    needs: Build
    if: startsWith(github.ref, 'refs/tags/')  # Only run on tag push
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: apk-files
          path: ./release-apks

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: ""
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload APKs to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            ./release-apks/singularity-${{ github.ref_name }}-release.apk
            ./release-apks/singularity-${{ github.ref_name }}-arm64-v8a-release.apk
            ./release-apks/singularity-${{ github.ref_name }}-armeabi-v7a-release.apk
            ./release-apks/singularity-${{ github.ref_name }}-x86_64-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
